class Solution {
public:

    int n;
    int v[305];
    long long dp[505][505];

    void rezolvare_bu()
    {
        for (int pas = 1; pas <= n - 1; pas++)
        {
            for (int i = 1; i <= n - pas; i++)
            {
                int j = i + pas;
                for (int k = i; k < j; k++)
                {
                    long long cost = 1LL * dp[i][k] + dp[k + 1][j] + 1LL * v[i - 1] * v[k] * v[j];
                    dp[i][j] = max(cost, dp[i][j]);
                }
            }
        }
    }

    int maxCoins(vector<int>& nums) {
        n = nums.size();
        for(int i = 0;i<n;i++)
        {
            v[i+1] = nums[i];
        }
        v[0] = 1;
        v[n+1] = 1;
        n++;
	    rezolvare_bu();
        return dp[1][n];
    }
};
